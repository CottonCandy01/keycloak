kind:  ApplicationSet
apiVersion: argoproj.io/v1alpha1
metadata:
  name: keycloak
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - list:
        elements:
          - cluster: keycloak
            url: https://github.com/bitnami/charts.git
            path: bitnami/keycloak
            targetRevision: main
            values: |
              postgresql:
                enabled: false
              externalDatabase:
                host: mariadb.mariadb.svc.cluster.local
                port: 3306
                password: mypwd
              extraEnvVars:
                - name: KC_DB
                  value: 'mariadb'
                - name: KC_DB_URL
                  value: 'jdbc:mariadb://mariadb.mariadb.svc.cluster.local:3306/bitnami_keycloak'
                - name: KEYCLOAK_EXTRA_ARGS
                  value: '--import-realm'
              auth:
                adminUser: admin
                adminPassword: aaAA11!!
              extraVolumeMounts:
                - name: realm-volume
                  mountPath: /opt/bitnami/keycloak/data/import
              extraVolumes: 
                - name: realm-volume
                  configMap:
                    name: test1
#              image:
#                debug: true
#              logging:
#                level: DEBUG
#              tls:
#                enabled: true
#                autoGenerated: true
#              postgresql:
#                auth:
#                  password: mypwd
          - cluster: mariadb
            url: https://github.com/bitnami/charts.git
            path: bitnami/mariadb
            targetRevision: main
            values: |
              auth:
                rootPassword: mypwd
                database: bitnami_keycloak
                username: bn_keycloak
                password: mypwd
              primary:
                service:
                  type: NodePort
              image: 
                debug: true
  template:
    metadata:
      name: '{{.cluster}}'
    spec:
      project: default
      source:
        repoURL: '{{.url}}'
        targetRevision: '{{.targetRevision}}'
        path: '{{.path}}'
        helm:
          values: '{{.values}}'
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{.cluster}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true